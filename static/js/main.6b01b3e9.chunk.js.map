{"version":3,"sources":["shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/LoadingComponent.js","components/CommentsComponent.js","components/MainComponent.js","redux/comments.js","redux/forms.js","App.js","redux/ConfigureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","commentsFailed","errmess","type","payload","addComments","comments","Loading","className","required","val","length","validEmail","test","validName","len1","len2","len","maxLength","CommentComponent","props","state","isCommentFormOpen","animating","activeIndex","toastShow","renderCommentsCarousel","bind","toggleComment","handleComment","next","previous","setActiveIndex","setAnimating","toggleToastShow","this","setState","index","nextIndex","values","postComment","resetFeedbackForm","slides","map","comment","CarouselItem","inverse","onExiting","onExited","key","id","Collapse","isOpen","Card","color","CardBody","message","slice","author","moreSlides","in","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Carousel","CarouselIndicators","text-color","items","onClickHandler","CarouselControl","direction","directionText","onClick","isLoading","errMess","styles","CardHeader","tag","model","onSubmit","Row","Col","xs","size","offset","text","name","placeholder","validators","show","messages","textarea","rows","md","Button","Component","Main","fetchComments","commentsLoading","commentsErrMess","connect","dispatch","newComment","Object","assign","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","alert","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","Comments","action","concat","InitialComment","email","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b01b3e9.chunk.js","sourcesContent":["export const baseUrl=\" https://manojdbserver.herokuapp.com/\";","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment=(comment)=>({\r\n\ttype:ActionTypes.ADD_COMMENT,\r\n\tpayload:comment\t\r\n});\r\n\r\n\r\nexport const postComment=(comment)=>(dispatch)=>{\r\n\tconst newComment=Object.assign({date:new Date().toISOString()},comment);\r\n\treturn fetch(baseUrl+'comments',{\r\n\t\tmethod:'POST',\r\n\t\tbody:JSON.stringify(newComment),\r\n\t\theaders:{\r\n\t\t\t'Content-Type':'application/json'\r\n\t\t},\r\n\t\tcredentials:'same-origin'\r\n\t})\r\n\t.then(response=>{\r\n\t\tif(response.ok) {\r\n\t\t\talert(\"Thanks for your feedback!\");\r\n\t\t\treturn response;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar error=new Error('Error '+response.status+': '+response.statusText);\r\n\t\t\terror.response=response;\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\terror=>{\r\n\t\tvar errmess=new Error(error.message);\r\n\t\tthrow errmess;\r\n\t})\r\n\t.then(response=>response.json())\r\n\t.then(response=>dispatch(addComment(response)))\r\n\t.catch(error=>{console.log('Post comments',error.message);\r\nalert(\"Your comment could not be updated\\n Error:\"+error.message);});\r\n\t\r\n}\r\n\r\n\r\nexport const fetchComments=()=>(dispatch)=>{\r\n\treturn fetch(baseUrl+'comments')\r\n\t.then(response=>{\r\n\t\tif(response.ok)return response;\r\n\t\telse {\r\n\t\t\tvar error=new Error('Error '+response.status+': '+response.statusText);\r\n\t\t\terror.response=response;\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\terror=>{\r\n\t\tvar errmess=new Error(error.message);\r\n\t\tthrow errmess;\r\n\t})\r\n\t.then(response=>response.json())\r\n\t.then(comments=>dispatch(addComments(comments)))\r\n\t.catch(error=>dispatch(commentsFailed(error.message)));\r\n}\r\n\r\n\r\nexport const commentsLoading=()=>({\r\n\ttype:ActionTypes.COMMENTS_LOADING\r\n\r\n});\r\n\r\nexport const commentsFailed=(errmess)=>({\r\n\ttype:ActionTypes.COMMENTS_FAILED,\r\n\tpayload:errmess\r\n});\r\n\r\nexport const addComments=(comments)=>({\r\n\ttype:ActionTypes.ADD_COMMENTS,\r\n\tpayload:comments\r\n});\r\n\r\n","export const ADD_COMMENT=\"ADD_COMMENT\";\r\nexport const COMMENTS_LOADING='COMMENTS_LOADING';\r\nexport const ADD_COMMENTS='ADD_COMMENTS';\r\nexport const COMMENTS_FAILED='COMMENTS_FAILED';","import React from 'react';\r\nexport const Loading=()=>{\r\n\treturn (\r\n\t\t<div className=\"col-12\">\r\n\t\t\t<span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n\t\t\t<p>Loading . . .</p>\r\n\r\n\t\t</div>);\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\nimport {\r\n\tCard,\r\n\tCardBody,\r\n\tCardHeader,\r\n\tButton,\r\n\tRow,\r\n\tCol,\r\n\tCollapse,\r\n\tCarousel,\r\n\tCarouselItem,\r\n\tCarouselIndicators,\r\n\tCarouselControl\r\n} from 'reactstrap';\r\nimport './customstyles.css';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst validName = (len1, len2) => (val) => minLength(len1)(val) && maxLength(len2)(val);\r\n\r\nclass CommentComponent extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisCommentFormOpen: true,\r\n\t\t\tanimating: false,\r\n\t\t\tactiveIndex: 0,\r\n\t\t\ttoastShow: false\r\n\t\t}\r\n\t\tthis.renderCommentsCarousel = this.renderCommentsCarousel.bind(this);\r\n\t\tthis.toggleComment = this.toggleComment.bind(this);\r\n\t\tthis.handleComment = this.handleComment.bind(this);\r\n\t\tthis.next = this.next.bind(this);\r\n\t\tthis.previous = this.previous.bind(this);\r\n\t\tthis.setActiveIndex = this.setActiveIndex.bind(this);\r\n\t\tthis.setAnimating = this.setAnimating.bind(this);\r\n\t\tthis.toggleToastShow = this.toggleToastShow.bind(this);\r\n\t}\r\n\r\n\ttoggleComment() {\r\n\t\tthis.setState({\r\n\t\t\tisCommentFormOpen: !this.state.isCommentFormOpen\r\n\t\t});\r\n\t}\r\n\ttoggleToastShow() {\r\n\t\tthis.setState({\r\n\t\t\ttoastShow: !this.state.toastShow\r\n\t\t});\r\n\t}\r\n\tsetActiveIndex(index) {\r\n\t\tthis.setState({\r\n\t\t\tactiveIndex: index\r\n\t\t});\r\n\t}\r\n\tsetAnimating(val) {\r\n\t\tthis.setState({\r\n\t\t\tanimating: val\r\n\t\t});\r\n\t}\r\n\tnext() {\r\n\t\tif (this.state.animating) return;\r\n\t\tconst nextIndex = this.state.activeIndex === this.props.comments.length - 1 ? 0 : this.state.activeIndex + 1;\r\n\t\tthis.setActiveIndex(nextIndex);\r\n\r\n\t}\r\n\tprevious() {\r\n\t\tif (this.state.animating) return;\r\n\t\tconst nextIndex = this.state.activeIndex === 0 ? this.props.comments.length - 1 : this.state.activeIndex - 1;\r\n\t\tthis.setActiveIndex(nextIndex);\r\n\t}\r\n\r\n\thandleComment(values) {\r\n\r\n\t\tthis.props.postComment(values);\r\n\t\tthis.props.resetFeedbackForm();\r\n\t\t//addComment(this.props.dish.id,values.rating,values.author,values.message)\r\n\t\t//event.preventDefault();//by default control goes to next page\r\n\t}\r\n\r\n\r\n\trenderCommentsCarousel({ comments }) {\r\n\r\n\t\tconst slides = comments.map((comment) => {\r\n\t\t\treturn (\r\n\t\t\t\t<CarouselItem inverse\r\n\t\t\t\t\tonExiting={() => this.setAnimating(true)}\r\n\t\t\t\t\tonExited={() => this.setAnimating(false)}\r\n\t\t\t\t\tkey={comment.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Collapse isOpen={!this.state.toastShow}>\r\n\t\t\t\t\t\t\t<Card className=\"roundedBottomCorners roundedTopCorners\" inverse color=\"dark\">\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\r\n\t\t\t\t\t\t\t\t\t<h4><strong>{comment.message.slice(0, 20) + \"...\"}</strong></h4>\r\n\t\t\t\t\t\t\t\t\t<p> ~ {comment.author} </p>\r\n\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</CarouselItem>\r\n\t\t\t);\r\n\t\t});\r\n\t\tconst moreSlides = comments.map((comment) => {\r\n\t\t\treturn (\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Fade in>\r\n\t\t\t\t\t\t\t<CardBody className=\"cardComment\">\r\n\t\t\t\t\t\t\t\t<p className=\"align text-left nex\"><strong>{\"\\\"\" + comment.message + \"\\\"\"}</strong></p>\r\n\t\t\t\t\t\t\t\t<p className=\"align text-right ex\"><i> ~ {comment.author} {\" ,  \"}{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</i></p>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t})\r\n\t\tconst showMoreOrLess = (more) => {\r\n\t\t\tif (more) return (<div>show less{\"  \"}<span className=\"fa fa-angle-up fa-lg\"></span></div>)\r\n\t\t\treturn (<div>show more{\" (\"+(this.props.comments.length-1)+\" comments)  \"}<span className=\"fa fa-angle-down fa-lg\"></span></div>);\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Carousel inverse color=\"dark\" activeIndex={this.state.activeIndex}\r\n\t\t\t\t\tnext={this.next}\r\n\t\t\t\t\tprevious={this.previous}\r\n\t\t\t\t>\r\n\r\n\t\t\t\t\t<CarouselIndicators text-color=\"dark\" items={comments} activeIndex={this.state.activeIndex} onClickHandler={this.setActiveIndex} />\r\n\t\t\t\t\t{slides}\r\n\t\t\t\t\t<CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n\t\t\t\t\t<CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n\r\n\t\t\t\t</Carousel>\r\n\t\t\t\t<a onClick={this.toggleToastShow}>{showMoreOrLess(this.state.toastShow)}</a>\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t<Collapse isOpen={this.state.toastShow}>\r\n\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t\t<Stagger in>\r\n\t\t\t\t\t\t\t\t{moreSlides}\r\n\t\t\t\t\t\t\t</Stagger>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Collapse>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\r\n\t}\r\n\trender() {\r\n\t\tif (this.props.isLoading) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (this.props.errMess) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<h4>{this.props.errMess}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (this.props.comments != null) {\r\n\t\t\tconst textonbutton = (commentOpen) => {\r\n\t\t\t\tif (commentOpen === false)\r\n\t\t\t\t\treturn (<div><strong>{\"Show Comments \"}<i className=\"fa fa-lg fa-angle-down\"></i></strong></div>);\r\n\t\t\t\treturn (<div><strong>{\"Hide Comments \"}<i className=\"fa fa-lg fa-angle-up\"></i></strong></div>);\r\n\t\t\t};\r\n\t\t\tconst Commentsform = () => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card className=\"roundedTopCorners\">\r\n\t\t\t\t\t\t<CardHeader className=\"darkCardHeader bg-dark\" tag=\"h3\">\r\n\t\t\t\t\t\t\t<strong>Leave us a comment!</strong><textonbutton />\r\n\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<Form model=\"feedback\" onSubmit={(values) => this.handleComment(values)}>\r\n\t\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\r\n\t\t\t\t\t\t\t\t\t<Col xs={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Control.text className=\"form-control\" model=\".author\" id=\"author\" name=\"author\" placeholder=\"Name\" validators={{ required, validName: validName(3, 15) }} />\r\n\t\t\t\t\t\t\t\t\t\t<Errors className=\"text-danger text-center\" model=\".author\" show=\"touched\" messages={{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: \" required ! .. \",\r\n\t\t\t\t\t\t\t\t\t\t\tvalidName: \" Please enter a valid name(3-20 characters) \"\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Control.text className=\"form-control\" model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email ID\" validators={{ required, validEmail }} />\r\n\t\t\t\t\t\t\t\t\t\t<Errors className=\"text-danger text-center\" model=\".email\" show=\"touched\" messages={{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: \"required ! ..\",\r\n\t\t\t\t\t\t\t\t\t\t\tvalidEmail: \" Please enter a valid email \"\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\r\n\t\t\t\t\t\t\t\t\t<Col xs={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Control.textarea className=\"form-control\" model=\".message\" id=\"message\" name=\"message\" placeholder=\"Tell us about your opinion\" rows={5} validators={{ validName: validName(2, 500) }} />\r\n\t\t\t\t\t\t\t\t\t\t<Errors className=\"text-danger text-center\" model=\".message\" show=\"touched\" messages={{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: \" required ! .. \",\r\n\t\t\t\t\t\t\t\t\t\t\tvalidName: \" Write something before you submit \"\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<Col md={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" color=\"dark\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"fa fa-pencil \"> </span>\r\n\t\t\t\t\t\t\t\t\t\t\t{\" \"}Submit\r\n\t\t\t                        </Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"container \">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className=\"row justify-content-center \">\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-8 col-lg-5 \" styles={{ \"margin-bottom\": \"0\" }}>\r\n\t\t\t\t\t\t\t{Commentsform()}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t<div className=\" col-12 col-md-8 col-lg-5 \" styles={{ \"margin-top\": \"0\" }} >\r\n\t\t\t\t\t\t\t<Card className=\"roundedBottomCorners\">\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.toggleComment}>\r\n\t\t\t\t\t\t\t\t\t\t{textonbutton(this.state.isCommentFormOpen)}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t\t\t<Collapse isOpen={this.state.isCommentFormOpen}>\r\n\t\t\t\t\t\t\t\t\t\t<br />{this.renderCommentsCarousel({ comments: this.props.comments })}\r\n\r\n\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default CommentComponent;\r\n\r\n\r\n// <Modal isOpen={this.isCommentFormOpe} toggle={this.toggleComment}>\r\n// \t\t\t            <ModalHeader toggle={this.toggleComment}>\r\n// \t\t\t                Kindly leave your thoughts below\r\n// \t\t\t            </ModalHeader>\r\n// \t\t\t            <ModalBody>\r\n// \t\t\t                <LocalForm onSubmit={(values)=>this.handleComment(values)}>\r\n// \t\t\t                    <Row className=\"form-group\">\r\n// \t\t\t                        <Label htmlFor=\"author\" md={2}>Name</Label>\r\n// \t\t\t                        <Col md={10}>\r\n// \t\t\t                        <Control.text className=\"form-control\" model=\".author\" id=\"author\" name=\"author\" placeholder=\"Name\" validators={{required,validName:validName(3,15)}} />\r\n// \t\t\t                        <Errors className=\"alert-danger text-center\" model=\".author\" show=\"touched\" messages={{\r\n// \t\t\t\t\t\t\t\t\t\t\trequired:\" required ! .. \",\r\n// \t\t\t\t\t\t\t\t\t\t\tvalidName:\" Please enter a valid name(3-20 characters) \"\r\n// \t\t\t\t\t\t\t\t\t\t}} />\r\n// \t\t\t                        </Col>\r\n// \t\t\t                    </Row>\r\n// \t\t\t                    <Row className=\"form-group\">\r\n// \t\t\t                        <Label htmlFor=\"email\" md={2}>Email</Label>\r\n// \t\t\t                        <Col md={10}>\r\n// \t\t\t                        <Control.text className=\"form-control\" model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email ID\" validators={{required,validEmail}} />\r\n// \t\t\t                        <Errors className=\"alert-danger text-center\" model=\".email\" show=\"touched\" messages={{\r\n// \t\t\t\t\t\t\t\t\t\t\trequired:\"required ! ..\",\r\n// \t\t\t\t\t\t\t\t\t\t\tvalidEmail:\" Please enter a valid email \"\r\n// \t\t\t\t\t\t\t\t\t\t}} />\r\n// \t\t\t                        </Col>\r\n// \t\t\t                    </Row>\r\n// \t\t\t                    <Row className=\"form-group\">\r\n// \t\t\t                        <Label htmlFor=\"message\" md={2}>Comment</Label>\r\n// \t\t\t                        <Col md={10}>\r\n// \t\t\t                        <Control.textarea className=\"form-control\" model=\".message\" id=\"message\" name=\"message\" placeholder=\"Tell us about your opinion\" rows={12} validators={{validName:validName(2,500)}} />\r\n// \t\t\t                        <Errors className=\"alert-danger text-center\" model=\".message\" show=\"touched\" messages={{\r\n// \t\t\t\t\t\t\t\t\t\t\trequired:\" required ! .. \",\r\n// \t\t\t\t\t\t\t\t\t\t\tvalidName:\" Write something before you submit \"\r\n// \t\t\t\t\t\t\t\t\t\t}} />\r\n// \t\t\t                        </Col>\r\n// \t\t\t                    </Row>\r\n// \t\t\t                    <Row className=\"form-group\">\r\n// \t\t\t                        <Col md={{size:10,offset:2}}>\r\n// \t\t\t                        <Button type=\"submit\" color=\"primary\">\r\n// \t\t\t                            <span className=\"fa fa-pencil \"> </span>\r\n// \t\t\t                            {\" \"}Submit \r\n// \t\t\t                        </Button>\r\n// \t\t\t                        </Col>\r\n// \t\t\t                    </Row>\r\n// \t\t\t                </LocalForm>\r\n// \t\t\t            </ModalBody>\r\n// \t\t\t        </Modal>","import React, { Component } from 'react';\r\nimport {actions} from \"react-redux-form\";\r\nimport {connect } from 'react-redux';\r\nimport {postComment,fetchComments} from '../redux/ActionCreators';\r\nimport CommentComponent from './CommentsComponent';\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n      comments:state.comments\r\n    }\r\n  }\r\n\r\n\r\nconst mapDispatchToProps=(dispatch)=>({\r\n  postComment:(comment)=>dispatch(postComment(comment)),\r\n  fetchComments:()=>{dispatch(fetchComments())},\r\n  resetFeedbackForm:()=>{dispatch(actions.reset('feedback'))}\r\n})\r\n\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n}\r\n\r\ncomponentDidMount(){\r\n  this.props.fetchComments();\r\n}\r\n\r\nrender(){\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CommentComponent\r\n\t\t\tcommentsLoading={this.props.comments.isLoading}\r\n\t\t\tcommentsErrMess={this.props.comments.errMess}\r\n\t\t\tcomments={this.props.comments.comments}\r\n\t\t\tpostComment={this.props.postComment}\r\n\t\t\tresetFeedbackForm={this.props.resetFeedbackForm}\r\n\t\t\t />\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Main);","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments=(state={\r\nisLoading:true,\r\nerrMess:null,\r\ncomments:[]\r\n},action)=>{\r\n\tswitch(action.type){\r\n\t\tcase ActionTypes.ADD_COMMENTS:\r\n\t\t\treturn {...state,isLoading:false,errMess:null,comments:action.payload}\r\n\t\tcase ActionTypes.COMMENTS_LOADING:\r\n\t\t\treturn {...state,isLoading:true,errMess:null,comments:[]}\r\n\t\tcase ActionTypes.COMMENTS_FAILED:\r\n\t\t\treturn {...state,isLoading:false,errMess:action.payload,comments:[]}\r\n\t\tcase ActionTypes.ADD_COMMENT:\r\n\t\t\tvar comment=action.payload;\r\n\t\t\treturn {...state,comments:state.comments.concat(comment)};\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","export const InitialComment={\r\n\tauthor:'',\r\n\temail:'',\r\n\tmessage:''\r\n};","import React from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\n\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/ConfigureStore';\n\nconst store=ConfigureStore();\n\n\nfunction App() {\n  return (\n   <Provider store={store}>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </Provider>\n  );\n}\n\n\nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport  thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {Comments} from './comments';\r\nimport {createForms} from 'react-redux-form';\r\nimport {InitialComment} from './forms';\r\nexport const ConfigureStore=()=>{\r\n\tconst store=createStore(\r\n\t\tcombineReducers({\r\n\t\t\tcomments:Comments,\r\n\t\t\t...createForms({\r\n\t\t\t\tfeedback:InitialComment\r\n\t\t\t})\r\n\r\n\t\t})\r\n\t\t,applyMiddleware(thunk,logger)\r\n\t\t);\r\n\treturn store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}