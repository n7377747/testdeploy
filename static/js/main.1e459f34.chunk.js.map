{"version":3,"sources":["components/pngguru.com.png","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/LoadingComponent.js","components/CommentsComponent.js","components/MainComponent.js","redux/comments.js","App.js","redux/ConfigureStore.js","serviceWorker.js","index.js"],"names":["module","exports","baseUrl","commentsFailed","errmess","type","payload","addComments","comments","Loading","className","required","val","length","validEmail","test","validName","len1","len2","len","maxLength","CommentComponent","props","state","isCommentFormOpen","animating","activeIndex","toastShow","RenderComments","bind","toggleComment","handleComment","next","previous","setActiveIndex","setAnimating","toggleToastShow","this","setState","index","nextIndex","values","postComment","list","map","comment","id","in","key","Card","outline","color","message","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CardBody","style","CardHeader","tag","padding","Button","onClick","slides","CarouselItem","inverse","onExiting","onExited","CardImg","height","width","src","require","alt","CardImgOverlay","slice","Collapse","isOpen","Carousel","CarouselIndicators","text-color","items","onClickHandler","CarouselControl","direction","directionText","isLoading","errMess","Commentsform","onSubmit","Row","Col","xs","size","offset","text","model","name","placeholder","validators","show","messages","textarea","rows","md","styles","renderCommentsCarousel","Component","Main","fetchComments","commentsLoading","commentsErrMess","connect","dispatch","newComment","Object","assign","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","alert","Comments","action","concat","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e459f34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pngguru.com.18cdb459.png\";","export const baseUrl=\"http://manojdb.herokuapp.com/\";","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment=(comment)=>({\r\n\ttype:ActionTypes.ADD_COMMENT,\r\n\tpayload:comment\t\r\n});\r\n\r\n\r\nexport const postComment=(comment)=>(dispatch)=>{\r\n\tconst newComment=Object.assign({date:new Date().toISOString()},comment);\r\n\treturn fetch(baseUrl+'comments',{\r\n\t\tmethod:'POST',\r\n\t\tbody:JSON.stringify(newComment),\r\n\t\theaders:{\r\n\t\t\t'Content-Type':'application/json'\r\n\t\t},\r\n\t\tcredentials:'same-origin'\r\n\t})\r\n\t.then(response=>{\r\n\t\tif(response.ok) return response;\r\n\t\telse {\r\n\t\t\tvar error=new Error('Error '+response.status+': '+response.statusText);\r\n\t\t\terror.response=response;\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\terror=>{\r\n\t\tvar errmess=new Error(error.message);\r\n\t\tthrow errmess;\r\n\t})\r\n\t.then(response=>response.json())\r\n\t.then(response=>dispatch(addComment(response)))\r\n\t.catch(error=>{console.log('Post comments',error.message);\r\nalert(\"Your comment could not be updated\\n Error:\"+error.message);});\r\n\t\r\n}\r\n\r\n\r\nexport const fetchComments=()=>(dispatch)=>{\r\n\treturn fetch(baseUrl+'comments')\r\n\t.then(response=>{\r\n\t\tif(response.ok)return response;\r\n\t\telse {\r\n\t\t\tvar error=new Error('Error '+response.status+': '+response.statusText);\r\n\t\t\terror.response=response;\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t},\r\n\terror=>{\r\n\t\tvar errmess=new Error(error.message);\r\n\t\tthrow errmess;\r\n\t})\r\n\t.then(response=>response.json())\r\n\t.then(comments=>dispatch(addComments(comments)))\r\n\t.catch(error=>dispatch(commentsFailed(error.message)));\r\n}\r\n\r\n\r\nexport const commentsLoading=()=>({\r\n\ttype:ActionTypes.COMMENTS_LOADING\r\n\r\n});\r\n\r\nexport const commentsFailed=(errmess)=>({\r\n\ttype:ActionTypes.COMMENTS_FAILED,\r\n\tpayload:errmess\r\n});\r\n\r\nexport const addComments=(comments)=>({\r\n\ttype:ActionTypes.ADD_COMMENTS,\r\n\tpayload:comments\r\n});\r\n\r\n","export const ADD_COMMENT=\"ADD_COMMENT\";\r\nexport const COMMENTS_LOADING='COMMENTS_LOADING';\r\nexport const ADD_COMMENTS='ADD_COMMENTS';\r\nexport const COMMENTS_FAILED='COMMENTS_FAILED';","import React from 'react';\r\nexport const Loading=()=>{\r\n\treturn (\r\n\t\t<div className=\"col-12\">\r\n\t\t\t<span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n\t\t\t<p>Loading . . .</p>\r\n\r\n\t\t</div>);\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Control, LocalForm, Errors, action } from 'react-redux-form';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nimport {\r\n\tCard,\r\n\tCardBody,\r\n\tCardImg,\r\n\tCardHeader,\r\n\tModal,\r\n\tModalHeader,\r\n\tLabel,\r\n\tModalBody,\r\n\tButton,\r\n\tRow,\r\n\tCol,\r\n\tCollapse,\r\n\tCarousel,\r\n\tCarouselItem,\r\n\tCardImgOverlay,\r\n\tCarouselIndicators,\r\n\tCarouselCaption,\r\n\tCarouselControl,\r\n\tMedia\r\n} from 'reactstrap';\r\nimport './customstyles.css';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst validName = (len1, len2) => (val) => minLength(len1)(val) && maxLength(len2)(val);\r\n\r\nclass CommentComponent extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisCommentFormOpen: false,\r\n\t\t\tanimating:false,\r\n\t\t\tactiveIndex:0,\r\n\t\t\ttoastShow:false\r\n\t\t}\r\n\t\tthis.RenderComments = this.RenderComments.bind(this);\r\n\t\tthis.toggleComment = this.toggleComment.bind(this);\r\n\t\tthis.handleComment = this.handleComment.bind(this);\r\n\t\tthis.next=this.next.bind(this);\r\n\t\tthis.previous=this.previous.bind(this);\r\n\t\tthis.setActiveIndex=this.setActiveIndex.bind(this);\r\n\t\tthis.setAnimating=this.setAnimating.bind(this);\r\n\t\tthis.toggleToastShow=this.toggleToastShow.bind(this);\r\n\t}\r\n\r\n\ttoggleComment() {\r\n\t\tthis.setState({\r\n\t\t\tisCommentFormOpen: !this.state.isCommentFormOpen\r\n\t\t});\r\n\t}\r\n\ttoggleToastShow(){\r\n\t\tthis.setState({\r\n\t\t\ttoastShow: !this.state.toastShow\r\n\t\t});\r\n\t}\r\n\tsetActiveIndex(index){\r\n\t\tthis.setState({\r\n\t\t\tactiveIndex:index\r\n\t\t});\r\n\t}\r\n\tsetAnimating(val){\r\n\t\tthis.setState({\r\n\t\t\tanimating:val\r\n\t\t});\r\n\t}\r\n\tnext(){\r\n\t\tif(this.state.animating) return;\r\n\t\tconst nextIndex = this.state.activeIndex === this.props.comments.length - 1 ? 0 : this.state.activeIndex + 1;\r\n    \tthis.setActiveIndex(nextIndex);\r\n\r\n\t}\r\n\tprevious(){\r\n\t\tif (this.state.animating) return;\r\n\t\tconst nextIndex = this.state.activeIndex === 0 ? this.props.comments.length - 1 : this.state.activeIndex - 1;\r\n\t\tthis.setActiveIndex(nextIndex);\r\n\t}\r\n\r\n\thandleComment(values) {\r\n\t\tthis.props.postComment(values);\r\n\t\t//addComment(this.props.dish.id,values.rating,values.author,values.message)\r\n\t\t//event.preventDefault();//by default control goes to next page\r\n\t}\r\n\r\n\tRenderComments({ comments }) {\r\n\t\tconst list = comments.map((comment) => {\r\n\t\t\tif (comment.id % 2 === 0)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Fade in>\r\n\t\t\t\t\t\t<li key={comment.id} >\r\n\t\t\t\t\t\t\t<Card className=\"text-secondary innerMessageCardRight\" outline color=\"secondary\">\r\n\t\t\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"row\"><strong>{comment.message}</strong></p>\r\n\t\t\t\t\t\t\t\t\t<p>-- {comment.author} {\"   \"}{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</Fade>\r\n\t\t\t\t);\r\n\t\t\telse\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Fade in>\r\n\t\t\t\t\t\t<li key={comment.id} >\r\n\t\t\t\t\t\t\t<Card className=\"text-secondary innerMessageCardLeft\" outline color=\"secondary\">\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"row\"><strong>{comment.message}</strong></p>\r\n\t\t\t\t\t\t\t\t\t\t<p>-- {comment.author} {\"   \"}{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</Fade>\r\n\t\t\t\t);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<Card outline color=\"secondary\" style={{ \"border-radius\": \"40px\", \"overflow\": \"hidden\" }}>\r\n\t\t\t\t<CardHeader tag=\"h3\" className=\"text-secondary border-secondary\">\r\n\t\t\t\t\tComments\r\n            </CardHeader>\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<div className=\"container\" style={{ padding: \"0px 35px 35px 35px\" }}>\r\n\r\n\t\t\t\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t\t\t\t<Stagger in>\r\n\t\t\t\t\t\t\t\t{list}\r\n\t\t\t\t\t\t\t</Stagger>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"row\" style={{ \"margin-top\": \"20px\" }}>\r\n\t\t\t\t\t\t\t\t<Button color=\"secondary\" style={{ \"border-radius\": \"40px\", padding: \"10px\" }} onClick={this.toggleComment}>\r\n\t\t\t\t\t\t\t\t\tLeave a Comment{\" \"} <span className=\"fa fa-comment\"></span></Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t);\r\n\t}\r\n\trenderCommentsCarousel({ comments }) {\r\n\t\r\n\t\tconst slides = comments.map((comment) => {\r\n\t\t\treturn (\r\n\t\t\t\t<CarouselItem inverse\r\n\t\t\t\t\tonExiting={() => this.setAnimating(true)}\r\n\t\t\t\t\tonExited={() => this.setAnimating(false)}\r\n\t\t\t\t\tkey={comment.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<CardImg height={250} width ={350} src={require(\"./pngguru.com.png\")} alt=\"no image\"/>\r\n\t\t\t\t\t\t<CardImgOverlay><br/><br/><h3><strong>{comment.message.slice(0,20)+\"...\"}</strong></h3>\r\n\t\t\t\t\t\t\t<p> ~ {comment.author} {\" ,  \"}{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n\t\t\t\t\t\t</CardImgOverlay>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Collapse isOpen={this.state.toastShow}>\r\n\t\t\t\t\t<Card inverse color=\"dark\">\t\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<p><strong>{comment.message}</strong></p>\r\n\t\t\t\t\t\t\t<p> ~ {comment.author} {\" ,  \"}{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\t\r\n\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</CarouselItem>\r\n\t\t\t);\r\n\t\t});\r\n\t\tconst showMoreOrLess=(more)=>{\r\n\t\t\tif(more) return (<div>show less{\" \"}<span className=\"fa fa-angle-up\"></span></div>)\r\n\t\t\treturn (<div>show more{\" \"}<span className=\"fa fa-angle-down\"></span></div>);\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<Carousel inverse color=\"dark\" activeIndex={this.state.activeIndex}\r\n\t\t\t\t\t\t\t\t\t\t\tnext={this.next}\r\n\t\t\t\t\t\t\t\t\t\t\tprevious={this.previous}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t<CarouselIndicators text-color=\"dark\" items={comments} activeIndex={this.state.activeIndex} onClickHandler={this.setActiveIndex} />\r\n\t\t\t\t{slides}\r\n\t\t\t\t<CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n\t\t\t\t<CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n\t\t\t\r\n\t\t\t</Carousel>\r\n\t\t\t<a onClick={this.toggleToastShow}>{showMoreOrLess(this.state.toastShow)}</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\trender() {\r\n\t\tif (this.props.isLoading) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (this.props.errMess) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<h4>{this.props.errMess}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (this.props.comments != null) {\r\n\t\t\tconst textonbutton = (commentOpen) => {\r\n\t\t\t\tif (commentOpen === false)\r\n\t\t\t\t\treturn (<div><strong>{\"Show Comments \"}<i className=\"fa fa-lg fa-angle-down\"></i></strong></div>);\r\n\t\t\t\treturn (<div><strong>{\"Hide Comments \"}<i className=\"fa fa-lg fa-angle-up\"></i></strong></div>);\r\n\t\t\t};\r\n\t\t\tconst Commentsform = () => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<CardHeader tag=\"h3\">\r\n\t\t\t\t\t\t\t<strong>Leave us a comment!</strong><textonbutton />\r\n\t\t\t\t\t\t</CardHeader>\r\n\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t<LocalForm onSubmit={(values) => this.handleComment(values)}>\r\n\t\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\r\n\t\t\t\t\t\t\t\t\t<Col xs={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Control.text className=\"form-control\" model=\".author\" id=\"author\" name=\"author\" placeholder=\"Name\" validators={{ required, validName: validName(3, 15) }} />\r\n\t\t\t\t\t\t\t\t\t\t<Errors className=\"alert-danger text-center\" model=\".author\" show=\"touched\" messages={{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: \" required ! .. \",\r\n\t\t\t\t\t\t\t\t\t\t\tvalidName: \" Please enter a valid name(3-20 characters) \"\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Control.text className=\"form-control\" model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email ID\" validators={{ required, validEmail }} />\r\n\t\t\t\t\t\t\t\t\t\t<Errors className=\"alert-danger text-center\" model=\".email\" show=\"touched\" messages={{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: \"required ! ..\",\r\n\t\t\t\t\t\t\t\t\t\t\tvalidEmail: \" Please enter a valid email \"\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\r\n\t\t\t\t\t\t\t\t\t<Col xs={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Control.textarea className=\"form-control\" model=\".message\" id=\"message\" name=\"message\" placeholder=\"Tell us about your opinion\" rows={5} validators={{ validName: validName(2, 500) }} />\r\n\t\t\t\t\t\t\t\t\t\t<Errors className=\"alert-danger text-center\" model=\".message\" show=\"touched\" messages={{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: \" required ! .. \",\r\n\t\t\t\t\t\t\t\t\t\t\tvalidName: \" Write something before you submit \"\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<Col md={{ size: 10, offset: 1 }}>\r\n\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" color=\"dark\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"fa fa-pencil \"> </span>\r\n\t\t\t\t\t\t\t\t\t\t\t{\" \"}Submit\r\n\t\t\t                        </Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</LocalForm>\r\n\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row \">\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-8 col-lg-6 offset-md-2\" styles={{\"margin-bottom\":\"0\"}}>\r\n\t\t\t\t\t\t\t<Commentsform />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-8 col-lg-6 offset-md-2 \" styles={{\"margin-top\":\"0\"}} >\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.toggleComment}>\r\n\t\t\t\t\t\t\t\t\t\t{textonbutton(this.state.isCommentFormOpen)}\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t\t\t<Collapse isOpen={this.state.isCommentFormOpen}>\r\n\t\t\t\t\t\t\t\t\t<br/>{this.renderCommentsCarousel({comments:this.props.comments})}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row \">\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-8 col-lg-6 offset-md-2 m-1\" >\r\n\t\t\t\t\t\t\t{this.RenderComments({ comments: this.props.comments })}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default CommentComponent;\r\n\r\n\r\n// <Modal isOpen={this.isCommentFormOpe} toggle={this.toggleComment}>\r\n// \t\t\t            <ModalHeader toggle={this.toggleComment}>\r\n// \t\t\t                Kindly leave your thoughts below\r\n// \t\t\t            </ModalHeader>\r\n// \t\t\t            <ModalBody>\r\n// \t\t\t                <LocalForm onSubmit={(values)=>this.handleComment(values)}>\r\n// \t\t\t                    <Row className=\"form-group\">\r\n// \t\t\t                        <Label htmlFor=\"author\" md={2}>Name</Label>\r\n// \t\t\t                        <Col md={10}>\r\n// \t\t\t                        <Control.text className=\"form-control\" model=\".author\" id=\"author\" name=\"author\" placeholder=\"Name\" validators={{required,validName:validName(3,15)}} />\r\n// \t\t\t                        <Errors className=\"alert-danger text-center\" model=\".author\" show=\"touched\" messages={{\r\n// \t\t\t\t\t\t\t\t\t\t\trequired:\" required ! .. \",\r\n// \t\t\t\t\t\t\t\t\t\t\tvalidName:\" Please enter a valid name(3-20 characters) \"\r\n// \t\t\t\t\t\t\t\t\t\t}} />\r\n// \t\t\t                        </Col>\r\n// \t\t\t                    </Row>\r\n// \t\t\t                    <Row className=\"form-group\">\r\n// \t\t\t                        <Label htmlFor=\"email\" md={2}>Email</Label>\r\n// \t\t\t                        <Col md={10}>\r\n// \t\t\t                        <Control.text className=\"form-control\" model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email ID\" validators={{required,validEmail}} />\r\n// \t\t\t                        <Errors className=\"alert-danger text-center\" model=\".email\" show=\"touched\" messages={{\r\n// \t\t\t\t\t\t\t\t\t\t\trequired:\"required ! ..\",\r\n// \t\t\t\t\t\t\t\t\t\t\tvalidEmail:\" Please enter a valid email \"\r\n// \t\t\t\t\t\t\t\t\t\t}} />\r\n// \t\t\t                        </Col>\r\n// \t\t\t                    </Row>\r\n// \t\t\t                    <Row className=\"form-group\">\r\n// \t\t\t                        <Label htmlFor=\"message\" md={2}>Comment</Label>\r\n// \t\t\t                        <Col md={10}>\r\n// \t\t\t                        <Control.textarea className=\"form-control\" model=\".message\" id=\"message\" name=\"message\" placeholder=\"Tell us about your opinion\" rows={12} validators={{validName:validName(2,500)}} />\r\n// \t\t\t                        <Errors className=\"alert-danger text-center\" model=\".message\" show=\"touched\" messages={{\r\n// \t\t\t\t\t\t\t\t\t\t\trequired:\" required ! .. \",\r\n// \t\t\t\t\t\t\t\t\t\t\tvalidName:\" Write something before you submit \"\r\n// \t\t\t\t\t\t\t\t\t\t}} />\r\n// \t\t\t                        </Col>\r\n// \t\t\t                    </Row>\r\n// \t\t\t                    <Row className=\"form-group\">\r\n// \t\t\t                        <Col md={{size:10,offset:2}}>\r\n// \t\t\t                        <Button type=\"submit\" color=\"primary\">\r\n// \t\t\t                            <span className=\"fa fa-pencil \"> </span>\r\n// \t\t\t                            {\" \"}Submit \r\n// \t\t\t                        </Button>\r\n// \t\t\t                        </Col>\r\n// \t\t\t                    </Row>\r\n// \t\t\t                </LocalForm>\r\n// \t\t\t            </ModalBody>\r\n// \t\t\t        </Modal>","import React, { Component } from 'react';\r\nimport {actions} from \"react-redux-form\";\r\nimport {connect } from 'react-redux';\r\nimport {postComment,fetchComments} from '../redux/ActionCreators';\r\nimport CommentComponent from './CommentsComponent';\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n      comments:state.comments\r\n    }\r\n  }\r\n\r\n\r\nconst mapDispatchToProps=(dispatch)=>({\r\n  postComment:(comment)=>dispatch(postComment(comment)),\r\n  fetchComments:()=>{dispatch(fetchComments())}\r\n  \r\n})\r\n\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n}\r\n\r\ncomponentDidMount(){\r\n  this.props.fetchComments();\r\n}\r\n\r\nrender(){\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<CommentComponent\r\n\t\t\tcommentsLoading={this.props.comments.isLoading}\r\n\t\t\tcommentsErrMess={this.props.comments.errMess}\r\n\t\t\tcomments={this.props.comments.comments}\r\n\t\t\tpostComment={this.props.postComment}\r\n\t\t\t />\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Main);","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments=(state={\r\nisLoading:true,\r\nerrMess:null,\r\ncomments:[]\r\n},action)=>{\r\n\tswitch(action.type){\r\n\t\tcase ActionTypes.ADD_COMMENTS:\r\n\t\t\treturn {...state,isLoading:false,errMess:null,comments:action.payload}\r\n\t\tcase ActionTypes.COMMENTS_LOADING:\r\n\t\t\treturn {...state,isLoading:true,errMess:null,comments:[]}\r\n\t\tcase ActionTypes.COMMENTS_FAILED:\r\n\t\t\treturn {...state,isLoading:false,errMess:action.payload,comments:[]}\r\n\t\tcase ActionTypes.ADD_COMMENT:\r\n\t\t\tvar comment=action.payload;\r\n\t\t\treturn {...state,comments:state.comments.concat(comment)};\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\n\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/ConfigureStore';\n\nconst store=ConfigureStore();\n\n\nfunction App() {\n  return (\n   <Provider store={store}>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport  thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {Comments} from './comments'\r\nexport const ConfigureStore=()=>{\r\n\tconst store=createStore(\r\n\t\tcombineReducers({\r\n\t\t\tcomments:Comments\r\n\t\t\t\r\n\r\n\t\t})\r\n\t\t,applyMiddleware(thunk,logger)\r\n\t\t);\r\n\treturn store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}